{
    // Requiring an item that matches a key in the dictionary
    // will transform the rendered require to the value.
    // E.g. var _ = require('lodash') if {'lodash': '_'}
    "alias": {
        "backbone": "Backbone",
        "backbone.marionette": "Marionette",
        "bluebird": "Promise",
        "cheerio": "$",
        "ember": "Ember",
        "handlebars": "Handlebars",
        "highland": "hl",
        "hogan.js": "Hogan",
        "leaflet": "L",
        "lodash": "_",
        "string": "S",
        "jquery": "$",
        "jquery-ui": "ui",
        "knockout": "ko",
        "mustache": "Mustache",
        "node-tap": "test",
        "pouchdb": "PouchDB",
        "prova": "test",
        "es6-promise": "Promise",
        "native-promise-only": "Promise",
        "ractive": "Ractive",
        "immutable": "Immutable",
        "ramda": "R",
        "react": "React",
        "react-dom": "ReactDOM",
        "react-addons-clone-with-props": "cloneWithProps",
        "react-addons-create-fragment": "createFragment",
        "react-addons-css-transition-group": "CSSTransitionGroup",
        "react-addons-linked-state-mixin": "LinkedStateMixin",
        "react-addons-pure-render-mixin": "PureRenderMixin",
        "react-addons-shallow-compare": "shallowCompare",
        "react-addons-transition-group": "TransitionGroup",
        "react-addons-update": "update",
        "roslib": "ROS",
        "rsvp": "RSVP",
        "underscore": "_",
        "socket.io": "io",
        "spine": "Spine",
        "tap": "test",
        "three": "THREE",
        "q": "Q",
        "qunit": "QUnit",
        "zepto": "$",
        "graceful-fs": "fs",
        "findup-sync": "findup",
        "mime-types": "mime",
        "gulp-util": "gutil",
        "iconv-lite": "iconv",
        "event-stream": "es",
        "stream-line-wrapper": "LineWrapper",
        "stream-to-array": "streamToArray",
        "raw-body": "getRawBody",
        "aws-sdk": "AWS",
        "connect-dynamodb": "DynamoDBStore",
        "connect-mysql": "MySQLStore",
        "connect-sdb": "SdbStore",
        "connect-sqlite3": "SQLiteStore",
        "package.json": "pkg",
        "tape": "test",
        "sequelize": "Sequelize",
        "r": "rethinkdb",
        "r": "rethinkdbdash"
    },

    // Common "alias" patterns that can be expressed using regular expressions
    "alias-pattern": {
        "gulp-(.+)": "\\1",
        "lodash\\.(.+)": "\\1"
    },

    // Use 'single' or "double" quotes
    "quotes": "single",

    // Don't insert semicolons at the end of lines
    "semicolon_free": false,

    // Use 'var', 'const', or 'let' variable declarations
    "var": "var",

    // File extensions to omit when doing a local require.
    // E.g. require('./filename') for ./filename.js if js is omited
    "omit_extensions": ["js"],

    // Use Bluebird style promisification of libraries
    // This setting is best set per-project
    "usePromisify": false,

    // Settings that allow you to override what promisify wrapper is used
    "promise": {
        "promisify": "Promise.promisify",
        "promisifyAll": "Promise.promisifyAll"

    },

    // A list of packages that should be promisified with Promise.promisify
    "promisify": [
        "which",
        "rimraf"
    ],

    // A list of packages that should be promisified with Promise.promisifyAll
    "promisifyAll": [
        "fs",
        "graceful-fs",
        "dns",
        "zlib",
        "redis",
        "mongodb",
        "mongoose",
        "mkdirp",
        "winston",
        "xml2js",
        "jsdom",
        "fs-extra",
        "prompt",
        "nodemailer",
        "ncp",
        "pg"
    ],

    // Use ES6 Import Style
    // i.e. import module from module
    "import": false,

    // Allow for tab completion through require statement
    "snippets": true,

    // find and import undefined vars with ESLint
    // when "Require From Word" called without selected word
    "import_undefined_vars": false
}
